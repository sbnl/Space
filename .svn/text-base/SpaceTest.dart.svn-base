//Copyright Software By Numbers Ltd

#import('dart:html');
#import('./packages/unittest/unittest.dart');
#import('Point.dart');
#import('SimplePoint.dart');
#import('Direction.dart');
#import('SimpleDirection.dart');
#import('SISurface.dart');
#import('SimpleSIDrawingSurface.dart');

void main() {
  SpaceTest spaceTest = new SpaceTest();
  spaceTest.testPoint();
  spaceTest.testDirection();
  spaceTest.testDraw();



}

class SpaceTest {

  void testPoint() {
    test("SimplePoint", () {
      Point2D point = new SimplePoint(10,10);
      expect(point.magnitude()).equals(Math.sqrt(200));
    });
  }

  void testDirection() {
    test("SimpleDirection from a bearing in degs  0",(){
      Direction direction = new SimpleDirection.fromDegs(0.0);
      expect(direction.getDegrees()).equals(0);
    });
    test("SimpleDirection from point - 45 degs",(){
      Point2D point = new SimplePoint(20,20);
      Direction direction = new SimpleDirection.fromPoint(point);
      expect(direction.getDegrees()).approxEquals(45);
    });
    test("SimpleDirection from point  135 degs",(){
      Point2D point = new SimplePoint(20,-20);
      Direction direction = new SimpleDirection.fromPoint(point);
      expect(direction.getDegrees()).approxEquals(135);
    });
    test("SimpleDirection from point  225 degs",(){
      Point2D point = new SimplePoint(-20,-20);
      Direction direction = new SimpleDirection.fromPoint(point);
      expect(direction.getDegrees()).approxEquals(225);
    });
    test("SimpleDirection from point  315 degs",(){
      Point2D point = new SimplePoint(-20,20);
      Direction direction = new SimpleDirection.fromPoint(point);
      expect(direction.getDegrees()).approxEquals(315);
    });
    test("SimpleDirection from point  90 degs",(){
      Point2D point = new SimplePoint(20,0);
      Direction direction = new SimpleDirection.fromPoint(point);
      expect(direction.getDegrees()).approxEquals(90);
    });
  }

  void testDraw() {

    /*
     * These functions scale in the x and y direction.
     */
    ScaleUnitsToPixels scaleXMetersToPixels = (units) {
      //scale factor along the x axis is 30:1 30 pixels per meter
      return (units * 30).toInt();
    };

    ScaleUnitsToPixels scaleYMetersToPixels = (units) {
      //scale factor along the y axis is 50:1 50 pixels per meter
      return (units * 50).toInt();
    };

    ScalePixelsToUnits scaleXPixelsToUnits = (pixels) {
      return pixels / 30;
    };

    ScalePixelsToUnits scaleYPixelsToUnits = (pixels) {
      return pixels / 50.0;
    };

    //create the surface
    SIDrawingSurface siSurface = new SimpleSIDrawingSurface.fromCanvas(document.query("#canvas1"));
    siSurface.setScaleUnitsToPixels(scaleXMetersToPixels, scaleYMetersToPixels);
    siSurface.setScalePixelsToUnits(scaleXPixelsToUnits, scaleYPixelsToUnits);
    //outline
    siSurface.drawOutline();

    //draw some graph paper bars

    //draw a simple straight line (2m, 2m) to (5m, 5m)
    siSurface.drawLine(new SimplePoint(2,4), new SimplePoint(5,5));
    siSurface.drawLine(new SimplePoint(0.5,2), new SimplePoint(5,0.5));
    siSurface.drawLine(new SimplePoint(0,0), new SimplePoint(5,5));
    //draw an x and y axis
    siSurface.drawXAxis(new SimplePoint(0,0), 1.0, 0.0);
    siSurface.drawYAxis(new SimplePoint(0,0), 1.0, 0.0,"m/s");
  }

}

